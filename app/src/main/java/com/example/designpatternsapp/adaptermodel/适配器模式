定义：
适配器模式把一个类的接口变成客户端所期待的另一种接口，从而使原本因接口不匹配而无法在一期工作的两个类能够在一起工作
分为类适配器模式和对象适配器模式
使用场景：
1、系统需要使用现有的类，而此类的接口不符合系统的需要，即接口不兼容
2、想要建立一个可以重复使用的类，用于与一些彼此之间没有太大关联的一些类，包括一些可能在将来引进的类一起工作
3、需要一个统一的输出接口，而输入端的类型不可预知
优点：
更好的复用性
系统需要使用现有的类，而此类的接口不符合系统的需要。那么通过适配器模式就可以让这些功能得到更好的复用
更好的扩展性
在实现适配器功能的时候，可以调用自己开发的功能，从而自然地扩展系统的功能
缺点：
过多地使用适配器，会让系统非常凌乱，不易整体把握。例如，明明看到调用的是A接口，其实内部被适配成了B接口的实现
一个系统如果出现太多这种情况，无异于一场灾难。因此如果不是很有必要，可以不适用适配器，而是直接对系统进行重构