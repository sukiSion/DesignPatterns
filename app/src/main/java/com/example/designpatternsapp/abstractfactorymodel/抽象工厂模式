定义：
为创建一组相关或者是相互依赖对象提供一个接口，而不需要指定它们的具体类
使用场景：
一个对象族具有相同的约束时可以使用抽象工厂模式。
优点：
分离接口与实现，客户端使用抽象工厂来创建需要的对象，而客户端根本不知道具体实现是谁，客户端只是面向产品的接口编程而已，
使其从具体的产品现实中解耦，同时基于接口与实现的分离，时抽象该工厂方法模式在切换产品类时更加灵活容易
缺点：
上面我们也有所提及，一是类文件的爆炸性增加，二是不太容易扩展新的产品类，因为每当我们增加一个产品类就需要修改抽象工厂，那么所有的具体工厂类均会被修改