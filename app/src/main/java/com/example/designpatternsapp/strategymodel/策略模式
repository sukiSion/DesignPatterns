定义：
策略模式定义了一系列的算法，并将每一个算法封装起来，并且使它们还可以相互替换。策略模式让算法独立于使用它的客户而独立变化
使用场景：
1、针对同一类型问题的多种处理方式，仅仅是具体行为有差别时
2、需要安全地封装多种统一类型的操作时
3、出现统一抽象类有多个子类，而又需要使用if-else或者switch-case来选择具体子类时
优点：
1、结构清晰明了，使用简单直观
2、耦合度相对而言较低，扩展方便
3、操作封装也更为彻底，数据更为安全
缺点：
随着策略的增加，子类也会变得繁多