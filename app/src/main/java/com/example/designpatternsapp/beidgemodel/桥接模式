定义：将抽象部分与实现部分分离，使它们都可以独立地进行变化
使用场景：
1、从模式的定义中我们大致可以了解到，这里“桥梁”的作用其实就是连接“抽象部分”与“实现部分”，但是事实上，任何多维度变化类或者说多个树状类之间的耦合都可以使用桥接模式来实现解耦。
2、如果一个系统需要在构件的抽象化角色和具体化角色之间增加更多的灵活性，避免在两个层次之间建立静态的继承联系，可以通过桥接模式使它们在抽象层建立一个关联关系
3、对于那些不希望使用继承或因为多层次继承导致系统类的个数急剧增加的系统，也可以考虑使用桥接模式
4、一个类存在两个独立变化的维度，且这两个维度都需要进行扩展
优点：
1、可以创建与平台无关的类和程序
2、客户端代码仅与高层抽象部分进行互动， 不会接触到平台的详细信息
3、可以新增抽象部分和实现部分， 且它们之间不会相互影响
4、抽象部分专注于处理高层逻辑， 实现部分处理平台细节、
缺点：
不容易设计，对开发者来说要有一定的经验要求。对高内聚的类使用该模式可能会让代码更加复杂