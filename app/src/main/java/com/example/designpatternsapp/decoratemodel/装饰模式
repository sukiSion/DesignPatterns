定义：动态地给一个对象添加一些额外的职责。就增加功能来说，装饰模式生成子类更加灵活
使用场景：需要透明且动态地扩展类的功能时
优点：
1、无需创建新子类即可扩展对象的行为、
2、可以在运行时添加或删除对象的功能
3、可以用多个装饰封装对象来组合几种行为
4、你可以将实现了许多不同行为的一个大类拆分为多个较小的类
缺点：
1、实现行为不受装饰栈顺序影响的装饰比较困难
2、在封装器栈中删除特定封装器比较困难
3、各层的初始化配置代码看上去可能会很糟糕
与代理模式的不同：
装饰模式是以对客户端透明的方式来扩展对象的功能，是继承关系的一个代替方案；
代理模式则是给一个对象提供一个代理对象，并由代理对象来控制原有对象的引用
装饰模式应该为装饰的对象增强功能；代理模式对代理的对象施加控制，但不对对象本身的功能进行增强
