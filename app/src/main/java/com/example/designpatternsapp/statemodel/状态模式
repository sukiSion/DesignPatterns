定义：
当一个对象的内在状态改变时允许改变其行为，这个对象看起来象时改变了其类
使用场景：
1、一个对象的行为取决于它的状态，并且它必须在运行时根据状态改变它的行为
2、代码中大量与对象状态有关的条件语句，例句，一个操作中含有庞大的多分支语句（if-else或switch-case），且这些分支依赖于该对象的状态
状态模式将每一个条件分支放入一个独立的类中，这使得你可以根据对象自身的情况将对象状态作为一个对象，这一对象可以不依赖于其他对象而独立变化，
这样通过多态来去除过多的、重复的if-else等分支语句
优点：
State模式将所有与一个特定的状态相关的行为都放入一个状态对象中，它提供了一个更好的方法来组织与特定状态相关的代码，将繁琐的状态判断转换成结构清晰
的状态类族，在避免代码膨胀的同时也保证了可扩展性和可维护性
缺点：
状态模式的使用必然会增加系统类和对象的个数

