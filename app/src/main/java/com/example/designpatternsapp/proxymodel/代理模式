定义：
为其他对象提供一种代理以控制对这个对象的访问
使用场景：
当无法或不想直接访问某个对象或访问某个对象存在困难时可以通过一个代理对象来间接访问，为了保证客户端使用的透明性，
委托对象与代理对象需要实现相同的接口
1、远程代理：
为某个对象在不同的内存地址空间提供局部代理。使系统可以将Server部分的实现隐藏，以便Client可以不必考虑Server的存在
2、虚拟代理：
使用一个代理对象表示一个十分耗资源的对象并在真正使用时才会创建
3、保护代理：
使用代理控制对原始对象的访问。该类型的代理常被用于原始对象有不同访问权限的情况
4、智能引用：
在访问原始对象时执行一些自己的附加操作并对指向原始对象的引用记数
优点：
1、你可以在客户端毫无察觉的情况下控制服务对象
2、如果客户端对服务对象的生命周期没有特殊要求， 你可以对生命周期进行管理
3、即使服务对象还未准备好或不存在， 代理也可以正常工作
4、开闭原则。 你可以在不对服务或客户端做出修改的情况下创建新代理
缺点：
1、代码可能会变得复杂， 因为需要新建许多类
2、服务响应可能会延迟