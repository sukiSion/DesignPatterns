定义：
要求一个子系统的外部和内部通信必须通过一个统一的对象进行。门面模式提供共一个高层次的接口，使得子系统更易于使用
使用场景：
1、为一个复杂子系统提供一个简单接口。子系统往往因为不断演变而变得越来越复杂，甚至可能被替换。大多数模式使用时都会产生更多更小的类，
这使得子系统更具可重用性的同时也更容易对子系统进行定制、修改，这种易变性使得隐藏子系统的具体实现使得尤为重要。Facade可以提供一个简单统一的接口，
对外隐藏子系统的具体实现、隔离变化。
2、当你需要构建一个层次结构的子系统时，使用Facade模式定义子系统中每层的入口点。如果子系统之间是相互依赖的，你可以让它们仅通过Facade接口进行通信，
从而简化了它们之间的依赖关系
优点：
1、对客户程序隐藏子系统细节，因而减少了客户对于子系统的耦合，能够拥抱变化
2、外观类对子系统的接口封装，使得系统更易于使用
缺点：
1、外观类接口膨胀。由于子系统的接口都有外观类统一对外暴露，使得外观类的API接口较多，在一定程度上增加了用户使用成本
2、外观类没有遵循开闭原则，当业务出现变更时，可能需要直接修改外观类
